title: "Consultancy Articles"
description: "Test Articles Etc..."
default: hypermedia-intro
posts:
  - slug: hypermedia-intro
    title: "Hypermedia Intro"
    author: 1
    date: 2023-10-23
    body: >
      To understand what a hypermedia system is we'll first take an in-depth look at the canonical hypermedia system: the World Wide Web. 
      Roy Fielding, an engineer who helped create specifications and build the implementations of many early pieces of the web, gave us 
      the term REpresentational State Transfer, or REST. In his PhD dissertation he described REST as a network architecture, and he 
      contrasted it with earlier approaches to building distributed software.
      We define a hypermedia system as a system that adheres to the RESTful network architecture in Fielding's original sense of this term.
      Unfortunately, today, you probably associate the term “REST” with JSON APIs, since that is where the term is typically used in industry. 
      This is a misapplied use of the term REST because JSON is not a natural hypermedia due to the absence of hypermedia controls. 
      The exchange of hypermedia is an explicit requirement for a system to be considered “RESTful.” It is a long story how we got here,
       using the term REST so incorrectly, and we will go into the details later in this book. But, for now, if you think REST implies JSON, 
       please try to set that understanding aside while reading this book, and come to the concept with fresh eyes.
  - slug: active-search
    title: "Active Search"
    author: 2
    date: 2023-10-24
    body: >
      ## Active Search

      So far so good with Contact.app: we have a nice little web application with some significant improvements over a plain HTML-based application. 
      We've added a proper “Delete Contact” button, done some dynamic validation of input and looked at different approaches to add paging to the application. 
      As we have said, many web developers would expect that a lot of JavaScript-based scripting would be required to get these features, but we've done it 
      all in relatively pure HTML, using only htmx attributes.


  - slug: rust-article
    title: "Rust Article"
    author: 2
    date: 2023-10-29
    body: >
      ## Rust Article

      You could, very crudely, think of the dynamic memory in a computer as a chalkboard. As a piece of software runs, 
      it's constantly writing little bits of data to the chalkboard, keeping track of which one is where, and erasing them 
      when they're no longer needed. Different computer languages manage this in different ways, though. An older language 
      like C or C++ is designed to give the programmer a lot of power over how and when the software uses the chalkboard. 
      That power is useful: with so much control over dynamic memory, a coder can make the software run very quickly. That's
      why C and C++ are often used to write “bare metal” code, the sort that interacts directly with hardware. Machines that 
      don't have an operating system like Windows or Linux, including everything from dialysis machines to cash registers, 
      run on such code. (It's also used for more advanced computing: at some point an operating system needs to communicate 
      with hardware. The kernels of Windows, Linux, and MacOS are all significantly written in C.)